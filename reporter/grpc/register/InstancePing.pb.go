// Code generated by protoc-gen-go. DO NOT EDIT.
// source: register/InstancePing.proto

package register

import (
	context "context"
	fmt "fmt"
	common "github.com/SkyAPM/go2sky/reporter/grpc/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceInstancePingPkg struct {
	ServiceInstanceId    int32    `protobuf:"varint,1,opt,name=serviceInstanceId,proto3" json:"serviceInstanceId,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	ServiceInstanceUUID  string   `protobuf:"bytes,3,opt,name=serviceInstanceUUID,proto3" json:"serviceInstanceUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceInstancePingPkg) Reset()         { *m = ServiceInstancePingPkg{} }
func (m *ServiceInstancePingPkg) String() string { return proto.CompactTextString(m) }
func (*ServiceInstancePingPkg) ProtoMessage()    {}
func (*ServiceInstancePingPkg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c10bfdff83d834ed, []int{0}
}

func (m *ServiceInstancePingPkg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInstancePingPkg.Unmarshal(m, b)
}
func (m *ServiceInstancePingPkg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInstancePingPkg.Marshal(b, m, deterministic)
}
func (m *ServiceInstancePingPkg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInstancePingPkg.Merge(m, src)
}
func (m *ServiceInstancePingPkg) XXX_Size() int {
	return xxx_messageInfo_ServiceInstancePingPkg.Size(m)
}
func (m *ServiceInstancePingPkg) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInstancePingPkg.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInstancePingPkg proto.InternalMessageInfo

func (m *ServiceInstancePingPkg) GetServiceInstanceId() int32 {
	if m != nil {
		return m.ServiceInstanceId
	}
	return 0
}

func (m *ServiceInstancePingPkg) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ServiceInstancePingPkg) GetServiceInstanceUUID() string {
	if m != nil {
		return m.ServiceInstanceUUID
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceInstancePingPkg)(nil), "ServiceInstancePingPkg")
}

func init() { proto.RegisterFile("register/InstancePing.proto", fileDescriptor_c10bfdff83d834ed) }

var fileDescriptor_c10bfdff83d834ed = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x1c, 0xc4, 0xcd, 0xae, 0x2e, 0x6c, 0x6e, 0x76, 0x41, 0x4b, 0xbd, 0x94, 0x3d, 0xf5, 0xa0, 0x89,
	0xd4, 0x27, 0xf0, 0xeb, 0xd0, 0x83, 0x52, 0x5a, 0x16, 0xc1, 0x5b, 0x36, 0x0d, 0xd9, 0x92, 0x4d,
	0xfe, 0x25, 0x89, 0xbb, 0xf4, 0xe4, 0x0b, 0xf8, 0x24, 0x3e, 0xa5, 0xb4, 0x75, 0xc1, 0x8f, 0x9e,
	0x32, 0x64, 0xfe, 0x33, 0x0c, 0x3f, 0x7c, 0x61, 0x85, 0xac, 0x9d, 0x17, 0x96, 0x66, 0xc6, 0x79,
	0x66, 0xb8, 0xc8, 0x6b, 0x23, 0x49, 0x63, 0xc1, 0x43, 0xb4, 0xe0, 0xa0, 0x35, 0x18, 0x3a, 0x3c,
	0xc3, 0xe7, 0xf2, 0x03, 0xe1, 0xb3, 0x52, 0xd8, 0x5d, 0xcd, 0xc5, 0xcf, 0x48, 0xae, 0x64, 0x70,
	0x89, 0x4f, 0xdd, 0x6f, 0x27, 0xab, 0x42, 0x14, 0xa3, 0xe4, 0xa4, 0xf8, 0x6f, 0x04, 0x01, 0x3e,
	0xf6, 0xb5, 0x16, 0xe1, 0x24, 0x46, 0xc9, 0xb4, 0xe8, 0x75, 0x70, 0x8d, 0x17, 0x7f, 0x0e, 0x57,
	0xab, 0xec, 0x21, 0x9c, 0xc6, 0x28, 0x99, 0x17, 0x63, 0x56, 0xfa, 0x88, 0x17, 0x23, 0x6b, 0x02,
	0x82, 0x67, 0x15, 0xf4, 0xea, 0x9c, 0x8c, 0xaf, 0x8d, 0xe6, 0xe4, 0x1e, 0xb4, 0x66, 0xa6, 0x72,
	0xcb, 0xa3, 0xbb, 0x77, 0x7c, 0x05, 0x56, 0x12, 0xd6, 0x30, 0xbe, 0x11, 0xc4, 0xa9, 0x76, 0xcf,
	0xb6, 0xaa, 0x23, 0xc1, 0x1a, 0x4d, 0x8c, 0xf0, 0x7b, 0xb0, 0x8a, 0x1c, 0x58, 0x91, 0x5d, 0x9a,
	0xa3, 0x57, 0x2a, 0x6b, 0xbf, 0x79, 0x5b, 0x13, 0x0e, 0x9a, 0x96, 0xaa, 0xbd, 0xcd, 0x9f, 0xa8,
	0x84, 0xd4, 0xa9, 0x96, 0x5a, 0xd1, 0x80, 0xed, 0x98, 0x4a, 0xdb, 0x70, 0x7a, 0x48, 0x7d, 0x4e,
	0xa2, 0x52, 0xb5, 0x2f, 0xdf, 0xbd, 0xcf, 0x43, 0x67, 0xde, 0x31, 0xe5, 0xb0, 0x5d, 0xcf, 0x7a,
	0xba, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x53, 0xc9, 0xba, 0xa2, 0x91, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceInstancePingClient is the client API for ServiceInstancePing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceInstancePingClient interface {
	DoPing(ctx context.Context, in *ServiceInstancePingPkg, opts ...grpc.CallOption) (*common.Commands, error)
}

type serviceInstancePingClient struct {
	cc *grpc.ClientConn
}

func NewServiceInstancePingClient(cc *grpc.ClientConn) ServiceInstancePingClient {
	return &serviceInstancePingClient{cc}
}

func (c *serviceInstancePingClient) DoPing(ctx context.Context, in *ServiceInstancePingPkg, opts ...grpc.CallOption) (*common.Commands, error) {
	out := new(common.Commands)
	err := c.cc.Invoke(ctx, "/ServiceInstancePing/doPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceInstancePingServer is the server API for ServiceInstancePing service.
type ServiceInstancePingServer interface {
	DoPing(context.Context, *ServiceInstancePingPkg) (*common.Commands, error)
}

func RegisterServiceInstancePingServer(s *grpc.Server, srv ServiceInstancePingServer) {
	s.RegisterService(&_ServiceInstancePing_serviceDesc, srv)
}

func _ServiceInstancePing_DoPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceInstancePingPkg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceInstancePingServer).DoPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ServiceInstancePing/DoPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceInstancePingServer).DoPing(ctx, req.(*ServiceInstancePingPkg))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceInstancePing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ServiceInstancePing",
	HandlerType: (*ServiceInstancePingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "doPing",
			Handler:    _ServiceInstancePing_DoPing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "register/InstancePing.proto",
}
