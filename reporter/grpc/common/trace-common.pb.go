// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/trace-common.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SpanType int32

const (
	SpanType_Entry SpanType = 0
	SpanType_Exit  SpanType = 1
	SpanType_Local SpanType = 2
)

var SpanType_name = map[int32]string{
	0: "Entry",
	1: "Exit",
	2: "Local",
}

var SpanType_value = map[string]int32{
	"Entry": 0,
	"Exit":  1,
	"Local": 2,
}

func (x SpanType) String() string {
	return proto.EnumName(SpanType_name, int32(x))
}

func (SpanType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5d7d2e503402948, []int{0}
}

type RefType int32

const (
	RefType_CrossProcess RefType = 0
	RefType_CrossThread  RefType = 1
)

var RefType_name = map[int32]string{
	0: "CrossProcess",
	1: "CrossThread",
}

var RefType_value = map[string]int32{
	"CrossProcess": 0,
	"CrossThread":  1,
}

func (x RefType) String() string {
	return proto.EnumName(RefType_name, int32(x))
}

func (RefType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5d7d2e503402948, []int{1}
}

type SpanLayer int32

const (
	SpanLayer_Unknown      SpanLayer = 0
	SpanLayer_Database     SpanLayer = 1
	SpanLayer_RPCFramework SpanLayer = 2
	SpanLayer_Http         SpanLayer = 3
	SpanLayer_MQ           SpanLayer = 4
	SpanLayer_Cache        SpanLayer = 5
)

var SpanLayer_name = map[int32]string{
	0: "Unknown",
	1: "Database",
	2: "RPCFramework",
	3: "Http",
	4: "MQ",
	5: "Cache",
}

var SpanLayer_value = map[string]int32{
	"Unknown":      0,
	"Database":     1,
	"RPCFramework": 2,
	"Http":         3,
	"MQ":           4,
	"Cache":        5,
}

func (x SpanLayer) String() string {
	return proto.EnumName(SpanLayer_name, int32(x))
}

func (SpanLayer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5d7d2e503402948, []int{2}
}

type UpstreamSegment struct {
	GlobalTraceIds       []*UniqueId `protobuf:"bytes,1,rep,name=globalTraceIds,proto3" json:"globalTraceIds,omitempty"`
	Segment              []byte      `protobuf:"bytes,2,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpstreamSegment) Reset()         { *m = UpstreamSegment{} }
func (m *UpstreamSegment) String() string { return proto.CompactTextString(m) }
func (*UpstreamSegment) ProtoMessage()    {}
func (*UpstreamSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5d7d2e503402948, []int{0}
}

func (m *UpstreamSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpstreamSegment.Unmarshal(m, b)
}
func (m *UpstreamSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpstreamSegment.Marshal(b, m, deterministic)
}
func (m *UpstreamSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamSegment.Merge(m, src)
}
func (m *UpstreamSegment) XXX_Size() int {
	return xxx_messageInfo_UpstreamSegment.Size(m)
}
func (m *UpstreamSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamSegment.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamSegment proto.InternalMessageInfo

func (m *UpstreamSegment) GetGlobalTraceIds() []*UniqueId {
	if m != nil {
		return m.GlobalTraceIds
	}
	return nil
}

func (m *UpstreamSegment) GetSegment() []byte {
	if m != nil {
		return m.Segment
	}
	return nil
}

type UniqueId struct {
	IdParts              []int64  `protobuf:"varint,1,rep,packed,name=idParts,proto3" json:"idParts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UniqueId) Reset()         { *m = UniqueId{} }
func (m *UniqueId) String() string { return proto.CompactTextString(m) }
func (*UniqueId) ProtoMessage()    {}
func (*UniqueId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5d7d2e503402948, []int{1}
}

func (m *UniqueId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniqueId.Unmarshal(m, b)
}
func (m *UniqueId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniqueId.Marshal(b, m, deterministic)
}
func (m *UniqueId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniqueId.Merge(m, src)
}
func (m *UniqueId) XXX_Size() int {
	return xxx_messageInfo_UniqueId.Size(m)
}
func (m *UniqueId) XXX_DiscardUnknown() {
	xxx_messageInfo_UniqueId.DiscardUnknown(m)
}

var xxx_messageInfo_UniqueId proto.InternalMessageInfo

func (m *UniqueId) GetIdParts() []int64 {
	if m != nil {
		return m.IdParts
	}
	return nil
}

func init() {
	proto.RegisterEnum("SpanType", SpanType_name, SpanType_value)
	proto.RegisterEnum("RefType", RefType_name, RefType_value)
	proto.RegisterEnum("SpanLayer", SpanLayer_name, SpanLayer_value)
	proto.RegisterType((*UpstreamSegment)(nil), "UpstreamSegment")
	proto.RegisterType((*UniqueId)(nil), "UniqueId")
}

func init() { proto.RegisterFile("common/trace-common.proto", fileDescriptor_f5d7d2e503402948) }

var fileDescriptor_f5d7d2e503402948 = []byte{
	// 377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x63, 0xa7, 0x6d, 0x92, 0x49, 0x44, 0x57, 0x3e, 0x05, 0x4e, 0x55, 0xc5, 0xa1, 0x8a,
	0xc0, 0x86, 0xf0, 0x06, 0x84, 0x22, 0x2a, 0x15, 0x64, 0x9c, 0x44, 0x48, 0x1c, 0x90, 0xc6, 0xce,
	0xb0, 0xb1, 0x6c, 0xef, 0x9a, 0xd9, 0x89, 0x82, 0x1f, 0x80, 0x97, 0xe1, 0x29, 0xd1, 0xc6, 0xe4,
	0xd2, 0xe3, 0xff, 0xeb, 0x9b, 0x6f, 0x57, 0xfa, 0xe1, 0x79, 0x61, 0x9b, 0xc6, 0x9a, 0x44, 0x18,
	0x0b, 0x7a, 0xdd, 0x87, 0xb8, 0x65, 0x2b, 0xf6, 0xf6, 0x07, 0x5c, 0x6f, 0x5b, 0x27, 0x4c, 0xd8,
	0xac, 0x49, 0x37, 0x64, 0x24, 0x7a, 0x0b, 0xcf, 0x74, 0x6d, 0x73, 0xac, 0x37, 0x1e, 0x7f, 0xd8,
	0xb9, 0x79, 0x70, 0x33, 0xbc, 0x9b, 0x2e, 0x27, 0xf1, 0xd6, 0x94, 0xbf, 0x0e, 0xf4, 0xb0, 0xcb,
	0x9e, 0x00, 0xd1, 0x1c, 0x46, 0xae, 0xbf, 0x9e, 0x87, 0x37, 0xc1, 0xdd, 0x2c, 0x3b, 0xc7, 0xdb,
	0x97, 0x30, 0x3e, 0x5f, 0x79, 0xaa, 0xdc, 0xa5, 0xc8, 0xd2, 0x1b, 0x87, 0xd9, 0x39, 0x2e, 0x16,
	0x30, 0x5e, 0xb7, 0x68, 0x36, 0x5d, 0x4b, 0xd1, 0x04, 0x2e, 0xef, 0x8d, 0x70, 0xa7, 0x06, 0xd1,
	0x18, 0x2e, 0xee, 0x7f, 0x97, 0xa2, 0x02, 0x5f, 0x3e, 0xda, 0x02, 0x6b, 0x15, 0x2e, 0x5e, 0xc1,
	0x28, 0xa3, 0x9f, 0x27, 0x54, 0xc1, 0x6c, 0xc5, 0xd6, 0xb9, 0x94, 0x6d, 0x41, 0xce, 0xa9, 0x41,
	0x74, 0x0d, 0xd3, 0x53, 0xb3, 0xd9, 0x33, 0xe1, 0x4e, 0x05, 0x8b, 0x2d, 0x4c, 0xbc, 0xf9, 0x11,
	0x3b, 0xe2, 0x68, 0x0a, 0xa3, 0xad, 0xa9, 0x8c, 0x3d, 0x1a, 0x35, 0x88, 0x66, 0x30, 0xfe, 0x80,
	0x82, 0x39, 0x3a, 0x52, 0x81, 0x57, 0x65, 0xe9, 0xea, 0x23, 0x63, 0x43, 0x47, 0xcb, 0x95, 0x0a,
	0xfd, 0xe3, 0x9f, 0x44, 0x5a, 0x35, 0x8c, 0xae, 0x20, 0xfc, 0xfc, 0x55, 0x5d, 0xf8, 0x4f, 0xac,
	0xb0, 0xd8, 0x93, 0xba, 0x7c, 0xff, 0x27, 0x80, 0x37, 0x96, 0x75, 0x8c, 0xad, 0x2f, 0x62, 0x57,
	0x75, 0x47, 0xac, 0xab, 0xd2, 0xf8, 0xa6, 0x89, 0x0d, 0x89, 0x97, 0xc4, 0x35, 0x1a, 0x7d, 0x40,
	0x4d, 0x31, 0x6a, 0x32, 0x92, 0x06, 0xdf, 0x97, 0xba, 0x94, 0xfd, 0x21, 0x8f, 0x0b, 0xdb, 0x24,
	0x42, 0xc2, 0x28, 0x54, 0x63, 0xee, 0x12, 0x6d, 0x97, 0xae, 0xea, 0x12, 0xa6, 0xd6, 0xb2, 0x10,
	0x27, 0x9a, 0xdb, 0x22, 0xe9, 0x77, 0xfa, 0x1b, 0xbe, 0x58, 0x57, 0xdd, 0xb7, 0xff, 0xf6, 0x2f,
	0xbd, 0x39, 0xf5, 0xdb, 0x15, 0xb6, 0xce, 0xaf, 0x4e, 0x2b, 0xbe, 0xfb, 0x17, 0x00, 0x00, 0xff,
	0xff, 0xb4, 0x20, 0x8a, 0x6d, 0xe2, 0x01, 0x00, 0x00,
}
